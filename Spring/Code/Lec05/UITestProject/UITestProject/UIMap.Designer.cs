// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// StartApp - Use 'StartAppParams' to pass parameters into this method.
        /// </summary>
        public void StartApp()
        {

            // Launch '%USERPROFILE%\Desktop\RegExTester.exe'
            ApplicationUnderTest regExTesterApplication = ApplicationUnderTest.Launch(this.StartAppParams.ExePath, this.StartAppParams.AlternateExePath);
        }
        
        /// <summary>
        /// EnterRegex - Use 'EnterRegexParams' to pass parameters into this method.
        /// </summary>
        public void EnterRegex( string regex )
        {
            #region Variable Declarations
            WinClient uIRegExTesterClient = this.UIRegExTesterWindow.UIRegExTesterClient;
            WinEdit uITextBoxRegExEdit = this.UIRegExTesterWindow.UITextBoxRegExWindow.UITextBoxRegExEdit;
            #endregion

            // Click 'RegExTester' client
            Mouse.Click(uIRegExTesterClient, new Point(137, 79));

            // Click 'RegExTester' client
            Mouse.Click(uIRegExTesterClient, new Point(130, 74));

            // Type '\d{2}' in 'textBoxRegEx' text box
            uITextBoxRegExEdit.Text = regex;// this.EnterRegexParams.UITextBoxRegExEditText;

            // Type '{Right}' in 'textBoxRegEx' text box
            Keyboard.SendKeys(uITextBoxRegExEdit, this.EnterRegexParams.UITextBoxRegExEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// EnterTestString - Use 'EnterTestStringParams' to pass parameters into this method.
        /// </summary>
        public void EnterTestString( string test )
        {
            #region Variable Declarations
            WinEdit uITextBoxTestStringEdit = this.UIRegExTesterWindow.UITextBoxTestStringWindow.UITextBoxTestStringEdit;
            #endregion

            // Type 'a23' in 'textBoxTestString' text box
            uITextBoxTestStringEdit.Text = test;//this.EnterTestStringParams.UITextBoxTestStringEditText;
        }
        
        /// <summary>
        /// buttonClick
        /// </summary>
        public void buttonClick()
        {
            #region Variable Declarations
            WinButton uIGOButton = this.UIRegExTesterWindow.UIGOWindow.UIGOButton;
            #endregion

            // Click 'Go!' button
            Mouse.Click(uIGOButton, new Point(286, 17));
        }
        
        /// <summary>
        /// AssertCorrectMatch - Use 'AssertCorrectMatchExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCorrectMatch( string correct )
        {
            #region Variable Declarations
            WinListItem uIItem123ListItem = this.UIRegExTesterWindow.UIListBoxResultsWindow.UIItem123ListItem;
            #endregion

            // Verify that '1 : 23' list item's property 'DisplayText' contains '23'
            StringAssert.Contains(uIItem123ListItem.DisplayText, correct);//this.AssertCorrectMatchExpectedValues.UIItem123ListItemDisplayText);
        }
        
        #region Properties
        public virtual StartAppParams StartAppParams
        {
            get
            {
                if ((this.mStartAppParams == null))
                {
                    this.mStartAppParams = new StartAppParams();
                }
                return this.mStartAppParams;
            }
        }
        
        public virtual EnterRegexParams EnterRegexParams
        {
            get
            {
                if ((this.mEnterRegexParams == null))
                {
                    this.mEnterRegexParams = new EnterRegexParams();
                }
                return this.mEnterRegexParams;
            }
        }
        
        public virtual EnterTestStringParams EnterTestStringParams
        {
            get
            {
                if ((this.mEnterTestStringParams == null))
                {
                    this.mEnterTestStringParams = new EnterTestStringParams();
                }
                return this.mEnterTestStringParams;
            }
        }
        
        public virtual AssertCorrectMatchExpectedValues AssertCorrectMatchExpectedValues
        {
            get
            {
                if ((this.mAssertCorrectMatchExpectedValues == null))
                {
                    this.mAssertCorrectMatchExpectedValues = new AssertCorrectMatchExpectedValues();
                }
                return this.mAssertCorrectMatchExpectedValues;
            }
        }
        
        public UIRegExTesterWindow UIRegExTesterWindow
        {
            get
            {
                if ((this.mUIRegExTesterWindow == null))
                {
                    this.mUIRegExTesterWindow = new UIRegExTesterWindow();
                }
                return this.mUIRegExTesterWindow;
            }
        }
        #endregion
        
        #region Fields
        private StartAppParams mStartAppParams;
        
        private EnterRegexParams mEnterRegexParams;
        
        private EnterTestStringParams mEnterTestStringParams;
        
        private AssertCorrectMatchExpectedValues mAssertCorrectMatchExpectedValues;
        
        private UIRegExTesterWindow mUIRegExTesterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'StartApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class StartAppParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\RegExTester.exe'
        /// </summary>
        public string ExePath = @"D:\PROJECTS\Students\RegExTester\RegExTester\bin\Release\RegExTester.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\RegExTester.exe'
        /// </summary>
        public string AlternateExePath = "%USERPROFILE%\\Desktop\\RegExTester.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterRegex'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterRegexParams
    {
        
        #region Fields
        /// <summary>
        /// Type '\d{2}' in 'textBoxRegEx' text box
        /// </summary>
        public string UITextBoxRegExEditText = "\\d{2}";
        
        /// <summary>
        /// Type '{Right}' in 'textBoxRegEx' text box
        /// </summary>
        public string UITextBoxRegExEditSendKeys = "{Right}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterTestString'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class EnterTestStringParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'a23' in 'textBoxTestString' text box
        /// </summary>
        public string UITextBoxTestStringEditText = "a23";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCorrectMatch'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertCorrectMatchExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that '1 : 23' list item's property 'DisplayText' contains '23'
        /// </summary>
        public string UIItem123ListItemDisplayText = "23";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIRegExTesterWindow : WinWindow
    {
        
        public UIRegExTesterWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "RegExTester";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RegExTester");
            #endregion
        }
        
        #region Properties
        public WinClient UIRegExTesterClient
        {
            get
            {
                if ((this.mUIRegExTesterClient == null))
                {
                    this.mUIRegExTesterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIRegExTesterClient.SearchProperties[WinControl.PropertyNames.Name] = "RegExTester";
                    this.mUIRegExTesterClient.WindowTitles.Add("RegExTester");
                    #endregion
                }
                return this.mUIRegExTesterClient;
            }
        }
        
        public UITextBoxRegExWindow UITextBoxRegExWindow
        {
            get
            {
                if ((this.mUITextBoxRegExWindow == null))
                {
                    this.mUITextBoxRegExWindow = new UITextBoxRegExWindow(this);
                }
                return this.mUITextBoxRegExWindow;
            }
        }
        
        public UITextBoxTestStringWindow UITextBoxTestStringWindow
        {
            get
            {
                if ((this.mUITextBoxTestStringWindow == null))
                {
                    this.mUITextBoxTestStringWindow = new UITextBoxTestStringWindow(this);
                }
                return this.mUITextBoxTestStringWindow;
            }
        }
        
        public UIGOWindow UIGOWindow
        {
            get
            {
                if ((this.mUIGOWindow == null))
                {
                    this.mUIGOWindow = new UIGOWindow(this);
                }
                return this.mUIGOWindow;
            }
        }
        
        public UIListBoxResultsWindow UIListBoxResultsWindow
        {
            get
            {
                if ((this.mUIListBoxResultsWindow == null))
                {
                    this.mUIListBoxResultsWindow = new UIListBoxResultsWindow(this);
                }
                return this.mUIListBoxResultsWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRegExTesterClient;
        
        private UITextBoxRegExWindow mUITextBoxRegExWindow;
        
        private UITextBoxTestStringWindow mUITextBoxTestStringWindow;
        
        private UIGOWindow mUIGOWindow;
        
        private UIListBoxResultsWindow mUIListBoxResultsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITextBoxRegExWindow : WinWindow
    {
        
        public UITextBoxRegExWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxRegEx";
            this.WindowTitles.Add("RegExTester");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxRegExEdit
        {
            get
            {
                if ((this.mUITextBoxRegExEdit == null))
                {
                    this.mUITextBoxRegExEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBoxRegExEdit.WindowTitles.Add("RegExTester");
                    #endregion
                }
                return this.mUITextBoxRegExEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxRegExEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITextBoxTestStringWindow : WinWindow
    {
        
        public UITextBoxTestStringWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxTestString";
            this.WindowTitles.Add("RegExTester");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxTestStringEdit
        {
            get
            {
                if ((this.mUITextBoxTestStringEdit == null))
                {
                    this.mUITextBoxTestStringEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITextBoxTestStringEdit.WindowTitles.Add("RegExTester");
                    #endregion
                }
                return this.mUITextBoxTestStringEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxTestStringEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIGOWindow : WinWindow
    {
        
        public UIGOWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonGo";
            this.WindowTitles.Add("RegExTester");
            #endregion
        }
        
        #region Properties
        public WinButton UIGOButton
        {
            get
            {
                if ((this.mUIGOButton == null))
                {
                    this.mUIGOButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGOButton.SearchProperties[WinButton.PropertyNames.Name] = "Go!";
                    this.mUIGOButton.WindowTitles.Add("RegExTester");
                    #endregion
                }
                return this.mUIGOButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGOButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIListBoxResultsWindow : WinWindow
    {
        
        public UIListBoxResultsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listBoxResults";
            this.WindowTitles.Add("RegExTester");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem123ListItem
        {
            get
            {
                if ((this.mUIItem123ListItem == null))
                {
                    this.mUIItem123ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem123ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "  1 : 23";
                    this.mUIItem123ListItem.WindowTitles.Add("RegExTester");
                    #endregion
                }
                return this.mUIItem123ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem123ListItem;
        #endregion
    }
}
